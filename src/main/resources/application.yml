sentry:
  enable-tracing: true
  #  integrations:
  #    - io.sentry.spring.boot.SentrySpringBootIntegration
  environment: development
  logging:
    minimum-event-level: "WARN"
    minimum-breadcrumb-level: "INFO"
  dsn: https://56ab2b3b2d344c9cac66ca3d3fa4efe1@o4504986976124928.ingest.sentry.io/4504986986217472

cloud:
  aws:
    region:
      static: ap-northeast-2
      auto: false
    s3:
      bucket: villages-3
    credentials:
      access-key: AKIAQQ5QPUSNTPXXS7BC
      secret-key: 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
    stack:
      auto: false

#meta:
#  bucket: ${bucket}
#  access-key: ${access-key}
#  secret-key: ${secret-key}
#  staticval: ${static}

server:
  # port: 8080
  port: 80
  servlet:
    encoding:
      charset: utf-8
      force: true
    session:
      timeout: 3600

spring:
  mvc:
    view:
      prefix: /WEB-INF/view/
      suffix: .jsp
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false
  datasource:
    url: jdbc:h2:mem:test;MODE=MySQL;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
      dialect: org.hibernate.dialect.H2Dialect # DB 방언설정 (H2)
    show-sql: true
    properties:
      hibernate:
        hbm2ddl:
          import_files: classpath:db/data.sql # DB 파일 명시적으로 선택
          import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor # 멀티 라인 입력 가능하도록
        connection:
          charSet: UTF-8 # 인코딩 설정
        '[format_sql]': true
        dialect: org.hibernate.dialect.H2Dialect
        naming_strategy: org.hibernate.cfg.ImprovedNamingStrategy
        default_batch_fetch_size: 1000
        jdbc:
          lob:
            non_contextual_creation: true
  #  sql:
  #    init:
  #      schema-locations:
  #         - classpath:db/table.sql
  #      data-locations:
  #       - classpath:db/data.sql
  h2:
    console:
      enabled: true
  output:
    ansi:
      enabled: always
  security:
    user:
      name: ssar
      password: 1234 # 패스워드 간단하게 변경
logging:
  level:
    # 로그레벨 설정 DEBUG로 개발하고 INFO로 배포한다.
    '[shop.mtcoding.securityapp]': DEBUG # DEBUG 레벨부터 에러 확인할 수 있게 설정하기
    '[org.hibernate.type]': TRACE # 콘솔 쿼리에 ? 에 주입된 값 보기
# mybatis:
#   mapper-locations:
#   - classpath:mapper/**.xml
#   configuration:
#     map-underscore-to-camel-case: true
